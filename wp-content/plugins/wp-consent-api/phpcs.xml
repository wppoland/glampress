<?xml version="1.0"?>
<ruleset name="WPConsentAPI">
	<!-- See https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<!-- See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/blob/develop/WordPress-Core/ruleset.xml -->

	<!-- Set a description for this ruleset. -->
	<description>A custom set of code standard rules to check for WordPress plugins.</description>

	<config name="minimum_supported_wp_version" value="5.0"/>
	<config name="testVersion" value="5.6-"/>

	<!-- Include the WordPress ruleset, with exclusions. -->
	<rule ref="WordPress" />
	<rule ref="WordPress-Docs" />
	<rule ref="WordPress-Extra" />

	<rule ref="WordPress.Arrays.MultipleStatementAlignment">
		<properties>
			<property name="exact" value="false" />
			<property name="maxColumn" value="70" />
		</properties>
	</rule>

	<!--
	To get the optimal benefits of using WPCS, we should add a couple of
	custom properties.
	Adjust the values of these properties to fit our needs.
	For information on additional custom properties available, check out
	the wiki:
	https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="wp-consent-api"/>
			</property>
		</properties>
	</rule>

	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array">
				<element value="wp_consent_api"/>
				<element value="wp_consent"/>
			</property>
		</properties>
	</rule>

	<!-- Include sniffs for PHP cross-version compatibility. -->
	<rule ref="PHPCompatibilityWP" />
</ruleset>
