{"version":3,"file":"js/scf-bindings.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAC+E;AAClC;AACmB;AAI/B;AAKF;AACM;AACO;AACkB;AACL;;AAEzD;;AAEA,MAAMkB,qBAAqB,GAAG;EAC7B,gBAAgB,EAAE;IACjBC,OAAO,EAAE,CAAE,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO;EAChE,CAAC;EACD,cAAc,EAAE;IACfA,OAAO,EAAE,CAAE,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO;EAChE,CAAC;EACD,YAAY,EAAE;IACbC,EAAE,EAAE,CAAE,OAAO,CAAE;IACfC,GAAG,EAAE,CAAE,OAAO,CAAE;IAChBC,KAAK,EAAE,CAAE,OAAO,CAAE;IAClBC,GAAG,EAAE,CAAE,OAAO;EACf,CAAC;EACD,aAAa,EAAE;IACdF,GAAG,EAAE,CAAE,KAAK,CAAE;IACdG,IAAI,EAAE,CAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,CAAE;IACrDC,UAAU,EAAE,CAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAE;IAC5CC,GAAG,EAAE,CAAE,MAAM,EAAE,UAAU,EAAE,QAAQ;EACpC;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAAEC,SAAS,EAAG;EAC3C,MAAMC,MAAM,GAAGX,qBAAqB,CAAEU,SAAS,CAAE;EACjD,OAAOC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAEF,MAAO,CAAC,GAAG,EAAE;AAC3C;;AAEA;AACA;AACA;AACA,MAAMG,kBAAkB,GAAG3B,8EAA0B,CAAI4B,SAAS,IAAM;EACvE,OAASC,KAAK,IAAM;IACnB,MAAMC,kBAAkB,GAAGR,qBAAqB,CAAEO,KAAK,CAACE,IAAK,CAAC;IAC9D,MAAM;MAAEC,mBAAmB;MAAEC;IAAuB,CAAC,GACpD/B,8EAAqB,CAAC,CAAC;;IAExB;IACA,MAAMgC,MAAM,GAAGzB,0DAAS,CAAI0B,MAAM,IAAM;MACvC,MAAM;QAAEC;MAAsB,CAAC,GAAGD,MAAM,CAAExB,uDAAc,CAAC;MACzD,MAAM;QAAE0B,kBAAkB;QAAEC;MAAiB,CAAC,GAC7CH,MAAM,CAAEvB,oDAAY,CAAC;MAEtB,MAAM2B,QAAQ,GAAGF,kBAAkB,CAAC,CAAC;MACrC,MAAMG,MAAM,GAAGF,gBAAgB,CAAC,CAAC;MAEjC,IAAK,CAAEC,QAAQ,IAAI,CAAEC,MAAM,EAAG,OAAO,CAAC,CAAC;MAEvC,MAAMC,MAAM,GAAGL,qBAAqB,CACnC,UAAU,EACVG,QAAQ,EACRC,MACD,CAAC;;MAED;MACA,MAAME,aAAa,GAAG,CAAC,CAAC;MACxBjB,MAAM,CAACkB,OAAO,CAAEF,MAAM,EAAEG,GAAG,IAAI,CAAC,CAAE,CAAC,CAACC,OAAO,CAAE,CAAE,CAAEC,GAAG,EAAEC,KAAK,CAAE,KAAM;QAClE,IAAKD,GAAG,CAACE,QAAQ,CAAE,SAAU,CAAC,EAAG;UAChC,MAAMC,aAAa,GAAGH,GAAG,CAACI,OAAO,CAAE,SAAS,EAAE,EAAG,CAAC;UAClD,IAAKT,MAAM,EAAEG,GAAG,CAACO,cAAc,CAAEF,aAAc,CAAC,EAAG;YAClDP,aAAa,CAAEO,aAAa,CAAE,GAAGF,KAAK;UACvC;QACD;MACD,CAAE,CAAC;MACH,OAAOL,aAAa;IACrB,CAAC,EAAE,EAAG,CAAC;;IAEP;IACA,MAAMU,eAAe,GAAGvD,+DAAW,CAClC,CAAEwD,SAAS,GAAG,IAAI,KAAM;MACvB,IAAK,CAAEnB,MAAM,IAAIT,MAAM,CAACC,IAAI,CAAEQ,MAAO,CAAC,CAACoB,MAAM,KAAK,CAAC,EAAG,OAAO,EAAE;MAE/D,MAAMC,WAAW,GAAG1C,qBAAqB,CAAEgB,KAAK,CAACE,IAAI,CAAE;MACvD,IAAIyB,YAAY,GAAG,IAAI;MAEvB,IAAKD,WAAW,EAAG;QAClBC,YAAY,GAAGH,SAAS,GACrBE,WAAW,CAAEF,SAAS,CAAE,GACxB5B,MAAM,CAACgC,MAAM,CAAEF,WAAY,CAAC,CAACG,IAAI,CAAC,CAAC;MACvC;MAEA,OAAOjC,MAAM,CAACkB,OAAO,CAAET,MAAO,CAAC,CAC7ByB,MAAM,CACN,CAAE,GAAIC,WAAW,CAAE,KAClB,CAAEJ,YAAY,IACdA,YAAY,CAACK,QAAQ,CAAED,WAAW,CAACE,IAAK,CAC1C,CAAC,CACAC,GAAG,CAAE,CAAE,CAAEC,SAAS,EAAEJ,WAAW,CAAE,MAAQ;QACzCb,KAAK,EAAEiB,SAAS;QAChBC,KAAK,EAAEL,WAAW,CAACK;MACpB,CAAC,CAAG,CAAC;IACP,CAAC,EACD,CAAE/B,MAAM,EAAEL,KAAK,CAACE,IAAI,CACrB,CAAC;;IAED;IACA,MAAMmC,uBAAuB,GAAGpE,2DAAO,CAAE,MAAM;MAC9C,IAAK,CAAEgC,kBAAkB,IAAIA,kBAAkB,CAACwB,MAAM,IAAI,CAAC,EAC1D,OAAO,KAAK;MAEb,MAAMC,WAAW,GAAG1C,qBAAqB,CAAEgB,KAAK,CAACE,IAAI,CAAE;MACvD,IAAK,CAAEwB,WAAW,EAAG,OAAO,KAAK;MAEjC,MAAMY,mBAAmB,GACxBZ,WAAW,CAAEzB,kBAAkB,CAAE,CAAC,CAAE,CAAE,IAAI,EAAE;MAC7C,OAAOA,kBAAkB,CAACsC,KAAK,CAAIC,IAAI,IAAM;QAC5C,MAAMC,SAAS,GAAGf,WAAW,CAAEc,IAAI,CAAE,IAAI,EAAE;QAC3C,OACCC,SAAS,CAAChB,MAAM,KAAKa,mBAAmB,CAACb,MAAM,IAC/CgB,SAAS,CAACF,KAAK,CAAIN,IAAI,IACtBK,mBAAmB,CAACN,QAAQ,CAAEC,IAAK,CACpC,CAAC;MAEH,CAAE,CAAC;IACJ,CAAC,EAAE,CAAEhC,kBAAkB,EAAED,KAAK,CAACE,IAAI,CAAG,CAAC;;IAEvC;IACA,MAAM,CAAEwC,WAAW,EAAEC,cAAc,CAAE,GAAG7E,4DAAQ,CAAE,CAAC,CAAE,CAAC;;IAEtD;IACAC,6DAAS,CAAE,MAAM;MAChB,MAAM6E,eAAe,GAAG5C,KAAK,CAAC6C,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,IAAI,CAAC,CAAC;MAClE,MAAMC,cAAc,GAAG,CAAC,CAAC;MAEzBpD,MAAM,CAACC,IAAI,CAAE+C,eAAgB,CAAC,CAAC5B,OAAO,CAAIQ,SAAS,IAAM;QACxD,IAAKoB,eAAe,CAAEpB,SAAS,CAAE,EAAEyB,IAAI,EAAEhC,GAAG,EAAG;UAC9C+B,cAAc,CAAExB,SAAS,CAAE,GAC1BoB,eAAe,CAAEpB,SAAS,CAAE,CAACyB,IAAI,CAAChC,GAAG;QACvC;MACD,CAAE,CAAC;MAEH0B,cAAc,CAAEK,cAAe,CAAC;IACjC,CAAC,EAAE,CAAEhD,KAAK,CAAC6C,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,CAAG,CAAC;;IAE7C;IACA,MAAMG,iBAAiB,GAAGlF,+DAAW,CACpC,CAAEwD,SAAS,EAAEN,KAAK,KAAM;MACvB,IAAKiC,KAAK,CAACC,OAAO,CAAE5B,SAAU,CAAC,EAAG;QACjC;QACA,MAAMwB,cAAc,GAAG;UAAE,GAAGN;QAAY,CAAC;QACzC,MAAMK,QAAQ,GAAG,CAAC,CAAC;QAEnBvB,SAAS,CAACR,OAAO,CAAIwB,IAAI,IAAM;UAC9BQ,cAAc,CAAER,IAAI,CAAE,GAAGtB,KAAK;UAC9B6B,QAAQ,CAAEP,IAAI,CAAE,GAAGtB,KAAK,GACrB;YACAmC,MAAM,EAAE,WAAW;YACnBJ,IAAI,EAAE;cAAEhC,GAAG,EAAEC;YAAM;UACnB,CAAC,GACDoC,SAAS;QACb,CAAE,CAAC;QAEHX,cAAc,CAAEK,cAAe,CAAC;QAChC7C,mBAAmB,CAAE4C,QAAS,CAAC;MAChC,CAAC,MAAM;QACN;QACAJ,cAAc,CAAIY,IAAI,KAAQ;UAC7B,GAAGA,IAAI;UACP,CAAE/B,SAAS,GAAIN;QAChB,CAAC,CAAG,CAAC;QACLf,mBAAmB,CAAE;UACpB,CAAEqB,SAAS,GAAIN,KAAK,GACjB;YACAmC,MAAM,EAAE,WAAW;YACnBJ,IAAI,EAAE;cAAEhC,GAAG,EAAEC;YAAM;UACnB,CAAC,GACDoC;QACJ,CAAE,CAAC;MACJ;IACD,CAAC,EACD,CAAEZ,WAAW,EAAEvC,mBAAmB,CACnC,CAAC;;IAED;IACA,MAAMqD,WAAW,GAAGxF,+DAAW,CAAE,MAAM;MACtCoC,sBAAsB,CAAC,CAAC;MACxBuC,cAAc,CAAE,CAAC,CAAE,CAAC;IACrB,CAAC,EAAE,CAAEvC,sBAAsB,CAAG,CAAC;;IAE/B;IACA,MAAMqD,YAAY,GAAGlC,eAAe,CAAC,CAAC;IACtC,IAAKkC,YAAY,CAAChC,MAAM,KAAK,CAAC,IAAI,CAAExB,kBAAkB,EAAG;MACxD,oBAAOyD,KAAA,CAAAC,aAAA,CAAC5D,SAAS,EAAMC,KAAS,CAAC;IAClC;IAEA,oBACC0D,KAAA,CAAAC,aAAA,CAAAD,KAAA,CAAAE,QAAA,qBACCF,KAAA,CAAAC,aAAA,CAACvF,sEAAiB,EAAM4B,KAAK,eAC5B0D,KAAA,CAAAC,aAAA,CAACnF,2EAAU;MACV4D,KAAK,EAAGzD,mDAAE,CACT,oBAAoB,EACpB,sBACD,CAAG;MACHkF,QAAQ,EAAGL;IAAa,GAEtBnB,uBAAuB,gBACxBqB,KAAA,CAAAC,aAAA,CAACjF,+EAAc;MACdoF,QAAQ,EAAGA,CAAA,KACV,CAAC,CAAEpB,WAAW,CAAEzC,kBAAkB,CAAE,CAAC,CAAE,CACvC;MACDmC,KAAK,EAAGzD,mDAAE,CACT,gBAAgB,EAChB,sBACD,CAAG;MACHoF,UAAU,EAAGA,CAAA,KACZb,iBAAiB,CAChBjD,kBAAkB,EAClB,IACD,CACA;MACD+D,gBAAgB,EAAG;IAAM,gBAEzBN,KAAA,CAAAC,aAAA,CAACrF,kEAAe;MACf8D,KAAK,EAAGzD,mDAAE,CACT,OAAO,EACP,sBACD,CAAG;MACHsF,WAAW,EAAGtF,mDAAE,CACf,gBAAgB,EAChB,sBACD,CAAG;MACHuF,OAAO,EAAG3C,eAAe,CAAC,CAAG;MAC7BL,KAAK,EACJwB,WAAW,CACVzC,kBAAkB,CAAE,CAAC,CAAE,CACvB,IAAI,EACL;MACDkE,QAAQ,EAAKjD,KAAK,IACjBgC,iBAAiB,CAChBjD,kBAAkB,EAClBiB,KACD,CACA;MACDkD,qBAAqB;MACrBC,uBAAuB;IAAA,CACvB,CACc,CAAC,GAEjBpE,kBAAkB,CAACiC,GAAG,CAAIV,SAAS,iBAClCkC,KAAA,CAAAC,aAAA,CAACjF,+EAAc;MACduC,GAAG,EAAG,aAAcO,SAAS,EAAK;MAClCsC,QAAQ,EAAGA,CAAA,KACV,CAAC,CAAEpB,WAAW,CAAElB,SAAS,CACzB;MACDY,KAAK,EAAGZ,SAAW;MACnBuC,UAAU,EAAGA,CAAA,KACZb,iBAAiB,CAAE1B,SAAS,EAAE,IAAK,CACnC;MACDwC,gBAAgB,EAAG;IAAM,gBAEzBN,KAAA,CAAAC,aAAA,CAACrF,kEAAe;MACf8D,KAAK,EAAGZ,SAAW;MACnByC,WAAW,EAAGtF,mDAAE,CACf,gBAAgB,EAChB,sBACD,CAAG;MACHuF,OAAO,EAAG3C,eAAe,CAAEC,SAAU,CAAG;MACxCN,KAAK,EAAGwB,WAAW,CAAElB,SAAS,CAAE,IAAI,EAAI;MACxC2C,QAAQ,EAAKjD,KAAK,IACjBgC,iBAAiB,CAChB1B,SAAS,EACTN,KACD,CACA;MACDkD,qBAAqB;MACrBC,uBAAuB;IAAA,CACvB,CACc,CACf,CAEQ,CACM,CAAC,eACpBX,KAAA,CAAAC,aAAA,CAAC5D,SAAS,EAAMC,KAAS,CACxB,CAAC;EAEL,CAAC;AACF,CAAC,EAAE,oBAAqB,CAAC;AAEzB,IAAKsE,MAAM,CAACC,GAAG,EAAEC,YAAY,EAAEC,cAAc,EAAG;EAC/CvG,2DAAS,CACR,kBAAkB,EAClB,2CAA2C,EAC3C4B,kBACD,CAAC;AACF;;;;;;;;;;;;;;;ACvTA;AACA;AACA;AACgE;AACF;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA,MAAM6E,YAAY,GAAKC,IAAI,IAAM;EAChC,IAAK,CAAEA,IAAI,EAAE7D,GAAG,EAAG;IAClB,OAAO,CAAC,CAAC;EACV;;EAEA;EACA,MAAM8D,YAAY,GAAG,CAAC,CAAC;EACvBjF,MAAM,CAACkB,OAAO,CAAE8D,IAAI,CAAC7D,GAAI,CAAC,CAACC,OAAO,CAAE,CAAE,CAAEC,GAAG,EAAEC,KAAK,CAAE,KAAM;IACzD,IAAKD,GAAG,CAACE,QAAQ,CAAE,SAAU,CAAC,EAAG;MAChC;MACA,MAAMgB,SAAS,GAAGlB,GAAG,CAACI,OAAO,CAAE,SAAS,EAAE,EAAG,CAAC;MAC9CwD,YAAY,CAAE1C,SAAS,CAAE,GAAGjB,KAAK;IAClC;EACD,CAAE,CAAC;EAEH,OAAO2D,YAAY;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,GAAGA,CAAEC,QAAQ,EAAEvD,SAAS,KAAM;EACxD,IAAK,CAAEuD,QAAQ,EAAG,OAAO,EAAE;EAC3B,QAASvD,SAAS;IACjB,KAAK,KAAK;MACT,OAAOuD,QAAQ,CAAC5F,GAAG,IAAI,EAAE;IAC1B,KAAK,KAAK;MACT,OAAO4F,QAAQ,CAAC1F,GAAG,IAAI,EAAE;IAC1B,KAAK,OAAO;MACX,OAAO0F,QAAQ,CAAC3F,KAAK,IAAI,EAAE;IAC5B,KAAK,IAAI;MACR,OAAO2F,QAAQ,CAAC7F,EAAE,IAAI6F,QAAQ,CAACC,EAAE,IAAI,EAAE;IACxC;MACC,OAAO,EAAE;EACX;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGA,CAAEzD,SAAS,EAAEyB,IAAI,EAAEiC,SAAS,KAAM;EAC7D,MAAM/C,SAAS,GAAGc,IAAI,EAAEhC,GAAG;EAC3B,MAAMc,WAAW,GAAGmD,SAAS,CAAE/C,SAAS,CAAE;EAE1C,IAAK,CAAEJ,WAAW,EAAG;IACpB,OAAO,EAAE;EACV;EAEA,MAAMoD,SAAS,GAAGpD,WAAW,CAACE,IAAI;EAClC,MAAMmD,UAAU,GAAGrD,WAAW,CAACsD,eAAe;EAE9C,QAASF,SAAS;IACjB,KAAK,OAAO;MACX,OAAOL,qBAAqB,CAAEM,UAAU,EAAE5D,SAAU,CAAC;IACtD,KAAK,UAAU;MACd;MACA,IAAK2B,KAAK,CAACC,OAAO,CAAEgC,UAAW,CAAC,EAAG;QAClC,OAAOA,UAAU,CAACE,IAAI,CAAE,IAAK,CAAC;MAC/B;MACA,OAAOF,UAAU,GAAGA,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE;IAC/C,KAAK,QAAQ;IACb,KAAK,OAAO;MACX,OAAOH,UAAU,GAAGA,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE;IAC/C,KAAK,aAAa;IAClB,KAAK,MAAM;IACX,KAAK,UAAU;IACf,KAAK,KAAK;IACV,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb;MACC,OAAOH,UAAU,GAAGA,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE;EAChD;AACD,CAAC;AAEDb,8EAA2B,CAAE;EAC5BxE,IAAI,EAAE,WAAW;EACjBkC,KAAK,EAAE,YAAY;EACnBoD,SAASA,CAAE;IAAEC,OAAO;IAAE1C,QAAQ;IAAEzC;EAAO,CAAC,EAAG;IAC1C,MAAM;MAAEC;IAAsB,CAAC,GAAGD,MAAM,CAAExB,uDAAc,CAAC;IAEzD,MAAM8F,IAAI,GACTa,OAAO,EAAE/E,QAAQ,IAAI+E,OAAO,EAAE9E,MAAM,GACjCJ,qBAAqB,CACrB,UAAU,EACVkF,OAAO,CAAC/E,QAAQ,EAChB+E,OAAO,CAAC9E,MACR,CAAC,GACD2C,SAAS;IAEb,MAAM4B,SAAS,GAAGP,YAAY,CAAEC,IAAK,CAAC;IAEtC,MAAMc,MAAM,GAAG,CAAC,CAAC;IAEjB9F,MAAM,CAACkB,OAAO,CAAEiC,QAAS,CAAC,CAAC/B,OAAO,CACjC,CAAE,CAAEQ,SAAS,EAAE;MAAEyB;IAAK,CAAC,GAAG,CAAC,CAAC,CAAE,KAAM;MACnC,MAAM/B,KAAK,GAAG+D,mBAAmB,CAAEzD,SAAS,EAAEyB,IAAI,EAAEiC,SAAU,CAAC;MAC/DQ,MAAM,CAAElE,SAAS,CAAE,GAAGN,KAAK;IAC5B,CACD,CAAC;IAED,OAAOwE,MAAM;EACd,CAAC;EACDC,gBAAgBA,CAAA,EAAG;IAClB,OAAO,KAAK;EACb;AACD,CAAE,CAAC;;;;;;;;;;AC9HH;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNsB","sources":["webpack:///./assets/src/js/bindings/block-editor.js","webpack:///./assets/src/js/bindings/sources.js","webpack:///external window [\"wp\",\"blockEditor\"]","webpack:///external window [\"wp\",\"blocks\"]","webpack:///external window [\"wp\",\"components\"]","webpack:///external window [\"wp\",\"compose\"]","webpack:///external window [\"wp\",\"coreData\"]","webpack:///external window [\"wp\",\"data\"]","webpack:///external window [\"wp\",\"editor\"]","webpack:///external window [\"wp\",\"element\"]","webpack:///external window [\"wp\",\"hooks\"]","webpack:///external window [\"wp\",\"i18n\"]","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./assets/src/js/bindings/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect, useCallback, useMemo } from '@wordpress/element';\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport {\n\tInspectorControls,\n\tuseBlockBindingsUtils,\n} from '@wordpress/block-editor';\nimport {\n\tComboboxControl,\n\t__experimentalToolsPanel as ToolsPanel,\n\t__experimentalToolsPanelItem as ToolsPanelItem,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { store as editorStore } from '@wordpress/editor';\n\n// These constant and the function above have been copied from Gutenberg. It should be public, eventually.\n\nconst BLOCK_BINDINGS_CONFIG = {\n\t'core/paragraph': {\n\t\tcontent: [ 'text', 'textarea', 'date_picker', 'number', 'range' ],\n\t},\n\t'core/heading': {\n\t\tcontent: [ 'text', 'textarea', 'date_picker', 'number', 'range' ],\n\t},\n\t'core/image': {\n\t\tid: [ 'image' ],\n\t\turl: [ 'image' ],\n\t\ttitle: [ 'image' ],\n\t\talt: [ 'image' ],\n\t},\n\t'core/button': {\n\t\turl: [ 'url' ],\n\t\ttext: [ 'text', 'checkbox', 'select', 'date_picker' ],\n\t\tlinkTarget: [ 'text', 'checkbox', 'select' ],\n\t\trel: [ 'text', 'checkbox', 'select' ],\n\t},\n};\n\n/**\n * Gets the bindable attributes for a given block.\n *\n * @param {string} blockName The name of the block.\n *\n * @return {string[]} The bindable attributes for the block.\n */\nfunction getBindableAttributes( blockName ) {\n\tconst config = BLOCK_BINDINGS_CONFIG[ blockName ];\n\treturn config ? Object.keys( config ) : [];\n}\n\n/**\n * Add custom controls to all blocks\n */\nconst withCustomControls = createHigherOrderComponent( ( BlockEdit ) => {\n\treturn ( props ) => {\n\t\tconst bindableAttributes = getBindableAttributes( props.name );\n\t\tconst { updateBlockBindings, removeAllBlockBindings } =\n\t\t\tuseBlockBindingsUtils();\n\n\t\t// Get ACF fields for current post\n\t\tconst fields = useSelect( ( select ) => {\n\t\t\tconst { getEditedEntityRecord } = select( coreDataStore );\n\t\t\tconst { getCurrentPostType, getCurrentPostId } =\n\t\t\t\tselect( editorStore );\n\n\t\t\tconst postType = getCurrentPostType();\n\t\t\tconst postId = getCurrentPostId();\n\n\t\t\tif ( ! postType || ! postId ) return {};\n\n\t\t\tconst record = getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t);\n\n\t\t\t// Extract fields that end with '_source' (simplified)\n\t\t\tconst sourcedFields = {};\n\t\t\tObject.entries( record?.acf || {} ).forEach( ( [ key, value ] ) => {\n\t\t\t\tif ( key.endsWith( '_source' ) ) {\n\t\t\t\t\tconst baseFieldName = key.replace( '_source', '' );\n\t\t\t\t\tif ( record?.acf.hasOwnProperty( baseFieldName ) ) {\n\t\t\t\t\t\tsourcedFields[ baseFieldName ] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn sourcedFields;\n\t\t}, [] );\n\n\t\t// Get filtered field options for an attribute\n\t\tconst getFieldOptions = useCallback(\n\t\t\t( attribute = null ) => {\n\t\t\t\tif ( ! fields || Object.keys( fields ).length === 0 ) return [];\n\n\t\t\t\tconst blockConfig = BLOCK_BINDINGS_CONFIG[ props.name ];\n\t\t\t\tlet allowedTypes = null;\n\n\t\t\t\tif ( blockConfig ) {\n\t\t\t\t\tallowedTypes = attribute\n\t\t\t\t\t\t? blockConfig[ attribute ]\n\t\t\t\t\t\t: Object.values( blockConfig ).flat();\n\t\t\t\t}\n\n\t\t\t\treturn Object.entries( fields )\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t( [ , fieldConfig ] ) =>\n\t\t\t\t\t\t\t! allowedTypes ||\n\t\t\t\t\t\t\tallowedTypes.includes( fieldConfig.type )\n\t\t\t\t\t)\n\t\t\t\t\t.map( ( [ fieldName, fieldConfig ] ) => ( {\n\t\t\t\t\t\tvalue: fieldName,\n\t\t\t\t\t\tlabel: fieldConfig.label,\n\t\t\t\t\t} ) );\n\t\t\t},\n\t\t\t[ fields, props.name ]\n\t\t);\n\n\t\t// Check if all attributes use the same field types (for \"all attributes\" mode)\n\t\tconst canUseAllAttributesMode = useMemo( () => {\n\t\t\tif ( ! bindableAttributes || bindableAttributes.length <= 1 )\n\t\t\t\treturn false;\n\n\t\t\tconst blockConfig = BLOCK_BINDINGS_CONFIG[ props.name ];\n\t\t\tif ( ! blockConfig ) return false;\n\n\t\t\tconst firstAttributeTypes =\n\t\t\t\tblockConfig[ bindableAttributes[ 0 ] ] || [];\n\t\t\treturn bindableAttributes.every( ( attr ) => {\n\t\t\t\tconst attrTypes = blockConfig[ attr ] || [];\n\t\t\t\treturn (\n\t\t\t\t\tattrTypes.length === firstAttributeTypes.length &&\n\t\t\t\t\tattrTypes.every( ( type ) =>\n\t\t\t\t\t\tfirstAttributeTypes.includes( type )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} );\n\t\t}, [ bindableAttributes, props.name ] );\n\n\t\t// Track bound fields\n\t\tconst [ boundFields, setBoundFields ] = useState( {} );\n\n\t\t// Sync with current bindings\n\t\tuseEffect( () => {\n\t\t\tconst currentBindings = props.attributes?.metadata?.bindings || {};\n\t\t\tconst newBoundFields = {};\n\n\t\t\tObject.keys( currentBindings ).forEach( ( attribute ) => {\n\t\t\t\tif ( currentBindings[ attribute ]?.args?.key ) {\n\t\t\t\t\tnewBoundFields[ attribute ] =\n\t\t\t\t\t\tcurrentBindings[ attribute ].args.key;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tsetBoundFields( newBoundFields );\n\t\t}, [ props.attributes?.metadata?.bindings ] );\n\n\t\t// Handle field selection\n\t\tconst handleFieldChange = useCallback(\n\t\t\t( attribute, value ) => {\n\t\t\t\tif ( Array.isArray( attribute ) ) {\n\t\t\t\t\t// Handle multiple attributes at once\n\t\t\t\t\tconst newBoundFields = { ...boundFields };\n\t\t\t\t\tconst bindings = {};\n\n\t\t\t\t\tattribute.forEach( ( attr ) => {\n\t\t\t\t\t\tnewBoundFields[ attr ] = value;\n\t\t\t\t\t\tbindings[ attr ] = value\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tsource: 'acf/field',\n\t\t\t\t\t\t\t\t\targs: { key: value },\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t} );\n\n\t\t\t\t\tsetBoundFields( newBoundFields );\n\t\t\t\t\tupdateBlockBindings( bindings );\n\t\t\t\t} else {\n\t\t\t\t\t// Handle single attribute\n\t\t\t\t\tsetBoundFields( ( prev ) => ( {\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t[ attribute ]: value,\n\t\t\t\t\t} ) );\n\t\t\t\t\tupdateBlockBindings( {\n\t\t\t\t\t\t[ attribute ]: value\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tsource: 'acf/field',\n\t\t\t\t\t\t\t\t\targs: { key: value },\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t},\n\t\t\t[ boundFields, updateBlockBindings ]\n\t\t);\n\n\t\t// Handle reset\n\t\tconst handleReset = useCallback( () => {\n\t\t\tremoveAllBlockBindings();\n\t\t\tsetBoundFields( {} );\n\t\t}, [ removeAllBlockBindings ] );\n\n\t\t// Don't show if no fields or attributes\n\t\tconst fieldOptions = getFieldOptions();\n\t\tif ( fieldOptions.length === 0 || ! bindableAttributes ) {\n\t\t\treturn <BlockEdit { ...props } />;\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<InspectorControls { ...props }>\n\t\t\t\t\t<ToolsPanel\n\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t'Connect to a field',\n\t\t\t\t\t\t\t'secure-custom-fields'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tresetAll={ handleReset }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ canUseAllAttributesMode ? (\n\t\t\t\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t\t\t\thasValue={ () =>\n\t\t\t\t\t\t\t\t\t!! boundFields[ bindableAttributes[ 0 ] ]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'All attributes',\n\t\t\t\t\t\t\t\t\t'secure-custom-fields'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tonDeselect={ () =>\n\t\t\t\t\t\t\t\t\thandleFieldChange(\n\t\t\t\t\t\t\t\t\t\tbindableAttributes,\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tisShownByDefault={ true }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ComboboxControl\n\t\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t\t'Field',\n\t\t\t\t\t\t\t\t\t\t'secure-custom-fields'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tplaceholder={ __(\n\t\t\t\t\t\t\t\t\t\t'Select a field',\n\t\t\t\t\t\t\t\t\t\t'secure-custom-fields'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\toptions={ getFieldOptions() }\n\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\tboundFields[\n\t\t\t\t\t\t\t\t\t\t\tbindableAttributes[ 0 ]\n\t\t\t\t\t\t\t\t\t\t] || ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\thandleFieldChange(\n\t\t\t\t\t\t\t\t\t\t\tbindableAttributes,\n\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ToolsPanelItem>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tbindableAttributes.map( ( attribute ) => (\n\t\t\t\t\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t\t\t\t\tkey={ `scf-field-${ attribute }` }\n\t\t\t\t\t\t\t\t\thasValue={ () =>\n\t\t\t\t\t\t\t\t\t\t!! boundFields[ attribute ]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel={ attribute }\n\t\t\t\t\t\t\t\t\tonDeselect={ () =>\n\t\t\t\t\t\t\t\t\t\thandleFieldChange( attribute, null )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisShownByDefault={ true }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ComboboxControl\n\t\t\t\t\t\t\t\t\t\tlabel={ attribute }\n\t\t\t\t\t\t\t\t\t\tplaceholder={ __(\n\t\t\t\t\t\t\t\t\t\t\t'Select a field',\n\t\t\t\t\t\t\t\t\t\t\t'secure-custom-fields'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\toptions={ getFieldOptions( attribute ) }\n\t\t\t\t\t\t\t\t\t\tvalue={ boundFields[ attribute ] || '' }\n\t\t\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\t\thandleFieldChange(\n\t\t\t\t\t\t\t\t\t\t\t\tattribute,\n\t\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ToolsPanelItem>\n\t\t\t\t\t\t\t) )\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ToolsPanel>\n\t\t\t\t</InspectorControls>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t</>\n\t\t);\n\t};\n}, 'withCustomControls' );\n\nif ( window.scf?.betaFeatures?.connect_fields ) {\n\taddFilter(\n\t\t'editor.BlockEdit',\n\t\t'secure-custom-fields/with-custom-controls',\n\t\twithCustomControls\n\t);\n}\n","/**\n * WordPress dependencies.\n */\nimport { registerBlockBindingsSource } from '@wordpress/blocks';\nimport { store as coreDataStore } from '@wordpress/core-data';\n\n/**\n * Get the SCF fields from the post entity.\n *\n * @param {Object} post The post entity object.\n * @returns {Object} The SCF fields object with source data.\n */\nconst getSCFFields = ( post ) => {\n\tif ( ! post?.acf ) {\n\t\treturn {};\n\t}\n\n\t// Extract only the _source fields which contain the formatted data\n\tconst sourceFields = {};\n\tObject.entries( post.acf ).forEach( ( [ key, value ] ) => {\n\t\tif ( key.endsWith( '_source' ) ) {\n\t\t\t// Remove the _source suffix to get the field name\n\t\t\tconst fieldName = key.replace( '_source', '' );\n\t\t\tsourceFields[ fieldName ] = value;\n\t\t}\n\t} );\n\n\treturn sourceFields;\n};\n\n/**\n * Resolve image attribute values from an image object.\n *\n * @param {Object} imageObj The image object from SCF field data.\n * @param {string} attribute The attribute to resolve.\n * @returns {string} The resolved attribute value.\n */\nconst resolveImageAttribute = ( imageObj, attribute ) => {\n\tif ( ! imageObj ) return '';\n\tswitch ( attribute ) {\n\t\tcase 'url':\n\t\t\treturn imageObj.url || '';\n\t\tcase 'alt':\n\t\t\treturn imageObj.alt || '';\n\t\tcase 'title':\n\t\t\treturn imageObj.title || '';\n\t\tcase 'id':\n\t\t\treturn imageObj.id || imageObj.ID || '';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\n\n/**\n * Process a single field binding and return its resolved value.\n *\n * @param {string} attribute The attribute being bound.\n * @param {Object} args The binding arguments.\n * @param {Object} scfFields The SCF fields object.\n * @returns {string} The resolved field value.\n */\nconst processFieldBinding = ( attribute, args, scfFields ) => {\n\tconst fieldName = args?.key;\n\tconst fieldConfig = scfFields[ fieldName ];\n\n\tif ( ! fieldConfig ) {\n\t\treturn '';\n\t}\n\n\tconst fieldType = fieldConfig.type;\n\tconst fieldValue = fieldConfig.formatted_value;\n\n\tswitch ( fieldType ) {\n\t\tcase 'image':\n\t\t\treturn resolveImageAttribute( fieldValue, attribute );\n\t\tcase 'checkbox':\n\t\t\t// For checkbox fields, join array values or return as string\n\t\t\tif ( Array.isArray( fieldValue ) ) {\n\t\t\t\treturn fieldValue.join( ', ' );\n\t\t\t}\n\t\t\treturn fieldValue ? fieldValue.toString() : '';\n\t\tcase 'number':\n\t\tcase 'range':\n\t\t\treturn fieldValue ? fieldValue.toString() : '';\n\t\tcase 'date_picker':\n\t\tcase 'text':\n\t\tcase 'textarea':\n\t\tcase 'url':\n\t\tcase 'email':\n\t\tcase 'select':\n\t\tdefault:\n\t\t\treturn fieldValue ? fieldValue.toString() : '';\n\t}\n};\n\nregisterBlockBindingsSource( {\n\tname: 'acf/field',\n\tlabel: 'SCF Fields',\n\tgetValues( { context, bindings, select } ) {\n\t\tconst { getEditedEntityRecord } = select( coreDataStore );\n\n\t\tconst post =\n\t\t\tcontext?.postType && context?.postId\n\t\t\t\t? getEditedEntityRecord(\n\t\t\t\t\t\t'postType',\n\t\t\t\t\t\tcontext.postType,\n\t\t\t\t\t\tcontext.postId\n\t\t\t\t  )\n\t\t\t\t: undefined;\n\n\t\tconst scfFields = getSCFFields( post );\n\n\t\tconst result = {};\n\n\t\tObject.entries( bindings ).forEach(\n\t\t\t( [ attribute, { args } = {} ] ) => {\n\t\t\t\tconst value = processFieldBinding( attribute, args, scfFields );\n\t\t\t\tresult[ attribute ] = value;\n\t\t\t}\n\t\t);\n\n\t\treturn result;\n\t},\n\tcanUserEditValue() {\n\t\treturn false;\n\t},\n} );\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './sources.js';\nimport './block-editor.js';\n"],"names":["useState","useEffect","useCallback","useMemo","addFilter","createHigherOrderComponent","InspectorControls","useBlockBindingsUtils","ComboboxControl","__experimentalToolsPanel","ToolsPanel","__experimentalToolsPanelItem","ToolsPanelItem","__","useSelect","store","coreDataStore","editorStore","BLOCK_BINDINGS_CONFIG","content","id","url","title","alt","text","linkTarget","rel","getBindableAttributes","blockName","config","Object","keys","withCustomControls","BlockEdit","props","bindableAttributes","name","updateBlockBindings","removeAllBlockBindings","fields","select","getEditedEntityRecord","getCurrentPostType","getCurrentPostId","postType","postId","record","sourcedFields","entries","acf","forEach","key","value","endsWith","baseFieldName","replace","hasOwnProperty","getFieldOptions","attribute","length","blockConfig","allowedTypes","values","flat","filter","fieldConfig","includes","type","map","fieldName","label","canUseAllAttributesMode","firstAttributeTypes","every","attr","attrTypes","boundFields","setBoundFields","currentBindings","attributes","metadata","bindings","newBoundFields","args","handleFieldChange","Array","isArray","source","undefined","prev","handleReset","fieldOptions","React","createElement","Fragment","resetAll","hasValue","onDeselect","isShownByDefault","placeholder","options","onChange","__next40pxDefaultSize","__nextHasNoMarginBottom","window","scf","betaFeatures","connect_fields","registerBlockBindingsSource","getSCFFields","post","sourceFields","resolveImageAttribute","imageObj","ID","processFieldBinding","scfFields","fieldType","fieldValue","formatted_value","join","toString","getValues","context","result","canUserEditValue"],"sourceRoot":""}